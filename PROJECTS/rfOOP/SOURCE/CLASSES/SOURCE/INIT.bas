!>-------------------------------------------------------------------------------
!!
{
"FUNCTION": "INIT_CLASS(CLASS, CLASS_NAME$)",
"ARGS": [{"CLASS": "UNIQUE CLASS BUNDLE", "CLASS_NAME": "UNIQUE CLASS NAME"}],
"RETURNS": "MEMORY ADDRESS",
"DESCRIPTION":
"
INITIALIZE CLASS USING CREATE_CLASS, CREATE_CLASS$ 
OR FROM USERS FUNCTION WITH APPROPRIATE PROPERTIES
"
}
!!


FN.DEF INIT_CLASS(CLASS_ADDRESS$, CLASS_NAME$)

   IF MM_VALIDATE$(CLASS_ADDRESS$) = "FALSE"
      EVENT$ = "{EVENT:{FUNCTION: " + CHR$(34) + "CREATE_CLASS('" + CLASS_NAME$ + "')" + CHR$(34) + ", TYPE: " + CHR$(34) + "rfOOP VALIDATION ERROR" + CHR$(34) + ", MESSAGE: " + CHR$(34) + "THE REFERENCED ADDRESS '" + CLASS_ADDRESS$ + "' IS NOT A VALID rfOOP CLASS OR OBJECT" + CHR$(34) + "}}"
      
      LOG_EVENT$(EVENT$)
      FN.RTN INIT_CLASS
   END IF 

   
   TYPINGS     = MM_CREATE("B")  
   PROPERTIES$ = MM_KEYS$(CLASS_ADDRESS$)
   PROPERTIES  = MM_POINTER(PROPERTIES$)
   CLASS       = MM_POINTER(CLASS_ADDRESS$)

   LIST.SIZE PROPERTIES, TOTAL_PROPERTIES

   FOR PROPERTY = 1 TO TOTAL_PROPERTIES
      LIST.GET PROPERTIES, PROPERTY, PROPERTY$
      BUNDLE.GET CLASS, PROPERTY$, PROPERTY_TYPE$
      
      IF PROPERTY$ = "NAME"        
         INIT_CLASS_NAME$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSEIF PROPERTY$ = "INDEX"
         INIT_CLASS_INDEX$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSEIF PROPERTY$ = "TYPE"
         INIT_CLASS_TYPE$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSEIF PROPERTY$ = "SUB TYPE"
         INIT_CLASS_SUBTYPE$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSEIF PROPERTY$ = "TYPINGS"         
         INIT_CLASS_TYPINGS$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSEIF PROPERTY$ = "CLASS VARIABLES"         
         INIT_CLASS_CLASSVARIABLES$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSEIF PROPERTY$ = "OBJECT VARIABLES"         
         INIT_CLASS_OBJECTVARIABLES$(CLASS, PROPERTY$, TYPINGS, CLASS_NAME$)
      ELSE
         IF PROPERTY_TYPE$ = "S"
            INIT_CLASS_STRING$(CLASS, PROPERTY$, TYPINGS)
         ELSEIF PROPERTY_TYPE$ = "N"
            INIT_CLASS_NUMERIC$(CLASS, PROPERTY$, TYPINGS)
         ELSEIF PROPERTY_TYPE$ = "SL"
            INIT_CLASS_STRINGL$(CLASS, PROPERTY$, TYPINGS)
         ELSEIF PROPERTY_TYPE$ = "NL"
            INIT_CLASS_NUMERICL$(CLASS, PROPERTY$, TYPINGS)
         ELSEIF PROPERTY_TYPE$ = "B"
            INIT_CLASS_B$(CLASS, PROPERTY$, TYPINGS)
         ELSEIF PROPERTY_TYPE$ = "P"
            INIT_CLASS_P$(CLASS, PROPERTY$, TYPINGS)
         END IF
      END IF 
   NEXT PROPERTY
      
   MM_DELETE(PROPERTIES$)       
                
   LOG_EVENT$("INIT CLASS SUCCESS: SUCCESSFULLY INITIALIZED CLASS '" + STR$(CLASS) + "'")
!   LOAD_THIS(INIT_CLASS)
   FN.RTN INIT_CLASS
                     
FN.END
